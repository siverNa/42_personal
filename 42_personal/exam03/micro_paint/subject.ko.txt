할당 이름 : micro_paint
필요한 파일: *.c *.h
허용되는 함수: fopen, fread, fscanf, fclose, write, malloc, calloc, realloc, free, memset, powf, sqrtf
--------------------------------------------------------------------------------------

"작업 파일"(operation file)을 읽을 프로그램을 작성하고 그 결과를 터미널에 출력합니다.

프로그램은 하나의 인수를 사용해야 하며, "작업 파일"(operation file)의 경로가 됩니다.
프로그램에 0개 또는 1개 초과의 인수가 주어지면 STDOUT에서 \n 뒤에 "Error: argument"를 쓴다.

$> ./micro_paint | cat -e
Error: argument$
$> ./micro_paint do not fear mathematics | cat -e
Error: argument$
$> 

"작업 파일"(operation file)을 열거나 읽는 동안 문제가 발생하면 "Error: Operation file corrupted" 다음에 STDOUT의 \n을 씁니다.

작업 파일에는 라인당 작업이 하나씩 있는 라인이 포함됩니다.
줄이 올바르지 않으면 오류가 발생합니다.
오류가 발생한 경우 프로그램에서 1을 반환해야 합니다.
오류가 발생하지 않으면 0을 반환해야 합니다.
마지막 줄은 \n을 포함하거나 포함하지 않을 수 있습니다.
라인을 순서대로 읽어야 하므로 작업이 동일한 순서로 실행되어야 합니다.
라인의 각 변수 사이에 공백이 하나 이상 있어야 합니다.

너비 높이 배경_CHAR WIDTH HEIGHT BACKGROUND_CHAR
이 줄은 항상 파일의 첫 번째 줄이며 그릴 영역을 정의합니다. 프로그램이 추첨 영역 외부에 아무것도 표시해서는 안 됩니다. 꼭 한 번 있을 거예요.
- WIDE: 추첨 영역에 사용할 문자 가로 수가 0 < WIDE < = 300인 int여야 합니다.
- HEIGHT: 추첨 구역에 사용할 문자 세로 수가 0 < HEIGHT < = 300인 int여야 합니다.
- BACKGROUND_CHAR: 빈 공간은 BACKGROUND_CHAR로 채워집니다.

r X Y 폭 높이 CHAR r X Y WIDTH HEIGHT CHAR
이 작업을 수행하면 사각형의 테두리만 그려지는 빈 사각형이 그려집니다.
- r: 문자 r
- X: 사각형 왼쪽 상단 모서리의 수평 위치인 임의의 부동 소수(any float)
- Y: 사각형의 왼쪽 상단 모서리의 수직 위치인 임의의 부동 소수(any float)
- WIDSE: 양의 플로트이지만 직사각형의 너비인 0은 아님(수평)
- 높이: 양의 플로트이지만 직사각형의 높이인 0은 아님(수직)
- CHAR: 직사각형을 그리는 데 문자 사용

R X Y 폭 높이 CHAR
이 작업을 수행하면 채워진 직사각형이 그려집니다.
- R: 문자 R
- X: 사각형 왼쪽 상단 모서리의 수평 위치인 임의의 부동 소수(any float)
- Y: 사각형의 왼쪽 상단 모서리의 수직 위치인 임의의 부동 소수(any float)
- WIDSE: 양의 플로트(a positive float) 이지만 직사각형의 너비인 0은 아님(수평)
- 높이: 양의 플로트(a positive float) 이지만 직사각형의 높이인 0은 아님(수직)
- CHAR: 직사각형을 그리는 데 문자 사용

추첨 영역은 각각 하나의 문자를 포함할 수 있는 직사각형으로 나뉘며(단말기에 있기 때문에...), 픽셀이라고 부릅니다.
모든 것을 쉽게 하기 위해 픽셀의 왼쪽 상단 모서리만 사용하여 픽셀이 직사각형에 있는지 여부를 알 수 있습니다.
직사각형의 테두리로부터 거리가 1보다 크거나 같은 왼쪽 상단 모서리를 가진 픽셀은 빈 직사각형의 일부가 아닙니다.
사각형의 경계로부터 거리가 1보다 작은 왼쪽 상단 모서리를 가진 픽셀은 빈 사각형의 일부이다.

당신은 다음 몇 줄을 읽으면서 이미지를 봐야 합니다. 그것은 말단을 나타낸다. 추첨 구역을 WIDSE 5와 HEIGHT 3으로 설정했습니다.
아래 설명을 쉽게 이해할 수 있도록 문자를 다르게 작성했습니다.
- 연산을 그리려는 경우: r 2.5 1.5 1 1 X(녹색 직사각형)
-- 이미지의 문자 'D'가 'X'로 대체됨을 의미합니다.

operation_file.example를 사용하여 테스트하는 데 도움이 되는 our_micro_paint 를 찾으십시오.

힌트:
점이 (Xa, Ya)로 정의된 경우
왼쪽 위 모서리(Xtl, Ytl)와 오른쪽 아래 모서리(Xbr, Ybr)가 있는 직사각형
Xtl <= Xa <= Xbr 및 Ytl <= Ya <= Ybr이면 점은 직사각형 안에 있습니다.